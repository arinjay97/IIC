<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuBabasahebAmbedkar_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.BabasahebAmbedkar
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuEFLU_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.EFLU
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuGhasidasguru_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.Ghasidasguru
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuharyana_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.haryana
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuHimachalHp_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.HimachalHp
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuHNBGU_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.HNBGU
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuJammu_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.Jammu
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cukarnatak_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.karnatak
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuMahatmabihar_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.Mahatmabihar
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cumahatmamgahv_PROD_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.mahatmamgahv
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuManipur_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.Manipur
    
</source>

<source>
    @type mysql_replicator
    host 10.107.99.111
    username south_readonly
    database cuManuu_prod_1
    password My@123qwe!
    primary_key id
    query select * from ims_items_stock_details
    tag cu.Manuu
    
</source>

<source>
    @type mysql_replicator
    host localhost
    username root
    database samarth_demo
    primary_key id
    query select * from ims_items_stock_details
    tag demo.samarth
    interval 10s
</source>

<filter demo.*>
    @type record_transformer
    enable_ruby
    <record>
            is_returnable "${\
            if record['is_returnable'] != nil
                if record['is_returnable']== 0
                    record['is_returnable'] = 'No'
                elsif record['is_returnable']== 1
                    record['is_returnable'] = 'Yes'
                end
            else
                end
                }"

            is_gem_purchased "${\
            if record['is_gem_purchased'] != nil
                if record['is_gem_purchased']== 0
                    record['is_gem_purchased'] = 'No'
                elsif record['is_gem_purchased']== 1
                    record['is_gem_purchased'] = 'Yes'
                end
            else
                end
                }"

            total_quantity "${\
                                if record['total_quantity'] != nil
                                        BigDecimal.new(record['total_quantity']).to_f
                                else
                                        end}"

            additional_charge "${\
                                if record['additional_charge'] != nil
                                        BigDecimal.new(record['additional_charge']).to_f
                                else
                                        end}"

            adjustment_charge "${\
                                if record['adjustment_charge'] != nil
                                        BigDecimal.new(record['adjustment_charge']).to_f
                                else
                                        end}"

            is_item_faulty "${\
            if record['is_item_faulty'] != nil
                if record['is_item_faulty']== 0
                    record['is_item_faulty'] = 'No'
                elsif record['is_item_faulty']== 1
                    record['is_item_faulty'] = 'Yes'
                end
            else
                end
                }"

            faulty_quantity "${\
                                if record['faulty_quantity'] != nil
                                        BigDecimal.new(record['faulty_quantity']).to_f
                                else
                                        end}"

            available_quantity "${\
                                if record['available_quantity'] != nil
                                        BigDecimal.new(record['available_quantity']).to_f
                                else
                                        end}"
            
            unit_price "${\
                                if record['unit_price'] != nil
                                        BigDecimal.new(record['unit_price']).to_f
                                else
                                        end}"

            tax_amount "${\
                                if record['tax_amount'] != nil
                                        BigDecimal.new(record['tax_amount']).to_f
                                else
                                        end}"

            total_amount "${\
                                if record['total_amount'] != nil
                                        BigDecimal.new(record['total_amount']).to_f
                                else
                                        end}"
    </record>
</filter>

<filter cu.*>
    @type record_transformer
    enable_ruby
    <record>
            is_returnable "${\
            if record['is_returnable'] != nil
                if record['is_returnable']== 0
                    record['is_returnable'] = 'No'
                elsif record['is_returnable']== 1
                    record['is_returnable'] = 'Yes'
                end
            else
                end
                }"

            is_gem_purchased "${\
            if record['is_gem_purchased'] != nil
                if record['is_gem_purchased']== 0
                    record['is_gem_purchased'] = 'No'
                elsif record['is_gem_purchased']== 1
                    record['is_gem_purchased'] = 'Yes'
                end
            else
                end
                }"

            total_quantity "${\
                                if record['total_quantity'] != nil
                                        BigDecimal.new(record['total_quantity']).to_f
                                else
                                        end}"

            additional_charge "${\
                                if record['additional_charge'] != nil
                                        BigDecimal.new(record['additional_charge']).to_f
                                else
                                        end}"

            adjustment_charge "${\
                                if record['adjustment_charge'] != nil
                                        BigDecimal.new(record['adjustment_charge']).to_f
                                else
                                        end}"

            is_item_faulty "${\
            if record['is_item_faulty'] != nil
                if record['is_item_faulty']== 0
                    record['is_item_faulty'] = 'No'
                elsif record['is_item_faulty']== 1
                    record['is_item_faulty'] = 'Yes'
                end
            else
                end
                }"

            faulty_quantity "${\
                                if record['faulty_quantity'] != nil
                                        BigDecimal.new(record['faulty_quantity']).to_f
                                else
                                        end}"

            available_quantity "${\
                                if record['available_quantity'] != nil
                                        BigDecimal.new(record['available_quantity']).to_f
                                else
                                        end}"
            
            unit_price "${\
                                if record['unit_price'] != nil
                                        BigDecimal.new(record['unit_price']).to_f
                                else
                                        end}"

            tax_amount "${\
                                if record['tax_amount'] != nil
                                        BigDecimal.new(record['tax_amount']).to_f
                                else
                                        end}"

            total_amount "${\
                                if record['total_amount'] != nil
                                        BigDecimal.new(record['total_amount']).to_f
                                else
                                        end}"
    </record>
</filter>


<match cu.*>
    @type elasticsearch
    host localhost
    port 9201
    index_name "ims_items_stock_details"
    include_tag_key true
    tag_key university
</match>

<match demo.*>
    @type elasticsearch
    host localhost
    port 9201
    index_name "ims_items_stock_details"
    include_tag_key true
    tag_key university
</match>